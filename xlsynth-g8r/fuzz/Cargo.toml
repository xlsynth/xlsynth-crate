[package]
name = "xlsynth-g8r-fuzz"
version = "0.13.0"
publish = false
edition = "2021"

[package.metadata]
cargo-fuzz = true

[dependencies]
libfuzzer-sys = "0.4"
arbitrary = { version = "1.3", features = ["derive"] }
log = "0.4"
env_logger = "0.11"
xlsynth = { path = "../../xlsynth", version = "0.13.0" }
rand = "0.8"
xlsynth-test-helpers = { path = "../../xlsynth-test-helpers" }
xlsynth-pir = { path = "../../xlsynth-pir" }
xlsynth-g8r = { path = "../../xlsynth-g8r" }
xlsynth-prover = { path = "../../xlsynth-prover" }

[lib]
name = "xlsynth_g8r_fuzz"
path = "src/lib.rs"

# Prevent this from interfering with workspaces
[workspace]
members = ["."]

[[bin]]
name = "fuzz_gatify"
path = "fuzz_targets/fuzz_gatify.rs"
test = false
doc = false

[[bin]]
name = "fuzz_bulk_replace"
path = "fuzz_targets/fuzz_bulk_replace.rs"
test = false
doc = false

[[bin]]
name = "fuzz_ir_opt_equiv"
path = "fuzz_targets/fuzz_ir_opt_equiv.rs"
test = false
doc = false

[[bin]]
name = "fuzz_gate_fn_roundtrip"
path = "fuzz_targets/fuzz_gate_fn_roundtrip.rs"
test = false
doc = false

[[bin]]
name = "fuzz_gate_transform_equiv"
path = "fuzz_targets/fuzz_gate_transform_equiv.rs"
test = false
doc = false

[[bin]]
name = "fuzz_gate_transform_arbitrary"
path = "fuzz_targets/fuzz_gate_transform_arbitrary.rs"
test = false
doc = false

[[bin]]
name = "fuzz_gate_fn_aiger_roundtrip"
path = "fuzz_targets/fuzz_gate_fn_aiger_roundtrip.rs"
test = false
doc = false

[[bin]]
name = "fuzz_ir_roundtrip"
path = "fuzz_targets/fuzz_ir_roundtrip.rs"
test = false
doc = false

[[bin]]
name = "fuzz_ir_same_sig_pair"
path = "fuzz_targets/fuzz_ir_same_sig_pair.rs"
test = false
doc = false

[[bin]]
name = "fuzz_ir_rebase_equiv"
path = "fuzz_targets/fuzz_ir_rebase_equiv.rs"
test = false
doc = false

[[bin]]
name = "fuzz_ir_outline_equiv"
path = "fuzz_targets/fuzz_ir_outline_equiv.rs"
test = false
doc = false

[[bin]]
name = "fuzz_ir_eval_interp_equiv"
path = "fuzz_targets/fuzz_ir_eval_interp_equiv.rs"
test = false
doc = false

[features]
# No default optional features; required solver integrations are always enabled via dependency specification above.
default = []
has-boolector = ["xlsynth-prover/has-boolector"]
has-easy-smt = ["xlsynth-prover/has-easy-smt"]
has-bitwuzla = ["xlsynth-prover/has-bitwuzla"]
# Forward selected optional solver/testing features to xlsynth-prover so callers can enable them on this crate.
with-easy-smt = ["xlsynth-prover/with-easy-smt", "has-easy-smt"]
with-boolector-binary-test = ["has-easy-smt", "xlsynth-prover/with-boolector-binary-test"]
with-bitwuzla-binary-test = ["has-easy-smt", "xlsynth-prover/with-bitwuzla-binary-test"]
with-z3-binary-test = ["has-easy-smt", "xlsynth-prover/with-z3-binary-test"]
with-bitwuzla-system = ["has-bitwuzla", "xlsynth-prover/with-bitwuzla-system"]
with-bitwuzla-built = ["has-bitwuzla", "xlsynth-prover/with-bitwuzla-built"]
with-boolector-system = ["has-boolector", "xlsynth-prover/with-boolector-system"]
with-boolector-built = ["has-boolector", "xlsynth-prover/with-boolector-built"]
with-z3-system = ["xlsynth-g8r/with-z3-system"]
with-z3-built = ["xlsynth-g8r/with-z3-built"]
